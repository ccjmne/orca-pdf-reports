$card-background: white;
$card-radius: 5px;

$opposites: (
  left: right,
  right: left
);

pdf-card {
  display: block;

  + pdf-card {
    margin-left: 20px;
  }
}

.card {
  position: relative;
  overflow: hidden;
  border: 1px solid $colour-primary;
  border-radius: $card-radius;

  &:not(.card-add) {
    background: $card-background;
    box-shadow: $shadow;

    .card-hover {
      @include center-content;

      position: absolute;
      top: 0;
      bottom: 0;
      transition: left .2s, right .2s, opacity .2s;
      opacity: 0;
      background-color: opacify($shadow-colour, .3);
      cursor: pointer;

      &:hover {
        background-color: opacify($shadow-colour, .4);
      }

      &:active {
        background-color: opacify($shadow-colour, .5);
      }

      @each $placement in left, right {
        &.card-hover-#{$placement} {
          border-#{map-get($opposites, $placement)}: 1px solid $colour-primary;
          #{$placement}: -60px;
        }
      }

      .card-close,
      .card-edit {
        padding: 20px;
        color: $header-text-colour;

        &.card-close::before {
          content: '\00d7';
          font-size: 3em;
        }

        &.card-edit::before {
          content: '✏️';
          font-size: 1.8em;
        }
      }
    }

    &:hover .card-hover {
      opacity: 1;

      @each $placement in left, right {
        &.card-hover-#{$placement} {
          #{$placement}: 0;
        }
      }
    }
  }

  &.card-add {
    @include center-content;

    box-sizing: border-box;
    padding: 20px 35px;
    border-style: dashed;
    background: none;
    box-shadow: none;
    color: $colour-primary;
    font-size: 3em;
    cursor: pointer;

    &:hover {
      background: lighten($shadow-colour, 50%);
    }

    &:active {
      background: lighten($shadow-colour, 10%);
    }
  }

  .card-title {
    @include background-cover('../../../assets/pdf-headers-background.svg', bottom center);
    @include center-content;

    color: $header-text-colour;

    > h2 {
      display: inline-block;
      margin: .5em 2em;
    }
  }

  .card-body {
    display: block;
    padding: 20px;

    + .card-tables {
      border-top: 1px solid $shadow-colour;
    }
  }

  .card-tables {
    display: flex;
    width: 100%;

    card-table {
      display: block;
      flex-grow: 1;

      &:not(:first-of-type) table {
        border-left: 1px solid $shadow-colour;
      }
    }
  }

  .card-grid-table {
    --row-height: 35px;
    card-grid-table {
      @for $cols from 1 through 4 {
        &.cols-#{$cols} {
          --cols: #{$cols};
        }
      }

      display: grid;
      grid-template-columns: repeat(var(--cols), 1fr auto);
      grid-auto-rows: var(--row-height);
      background: repeating-linear-gradient(transparent 0 var(--row-height), $odd-row-background var(--row-height) calc(var(--row-height) * 2));
      align-items: stretch;

      > div {
        // these divs *require* the following 4 properties for the ellipsis to work
        display: block;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;

        // vertically align content without using flex-box
        line-height: var(--row-height);

        &:nth-child(odd) {
          padding-left: 20px;
        }

        &:nth-child(even) {
          padding: 0 20px;
          text-align: end;
        }

        &.heading {
          font-weight: 800;
        }
      }

      // let cols-2..4 have a border-left between each pair of divs on the same row
      @for $cols from 2 through 4 {
        &.cols-#{$cols} {
          @for $c from 2 through $cols {
            > div:nth-child(#{$cols * 2}n + #{$c * 2 - 1}) {
              border-left: 1px solid $shadow-colour;
            }
          }
        }
      }
    }
  }
}
